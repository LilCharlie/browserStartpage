{"version":3,"sources":["script.js"],"names":["document","addEventListener","setJs","getElementsByTagName","className","stickyElement","stickyId","compensateId","compensateProperty","compensateElement","getElementById","stickyHeight","clientHeight","classList","add","style","setProperty","stickyElements","handleTriggers","elementClassName","elements","getElementsByClassName","i","length","onclick","event","target","this","getAttribute","toggleTarget","elementId","targetElement","contains","remove","preventDefault","tabTrigger","tabbedContent","console","log","setCurrentTab","newTabId","markTabTrigger","unhideSelectedContent","localStorage","setItem","unsetTabs","savedLocalStorageId","getItem","index","window","onresize"],"mappings":"AAGAA,SAASC,iBAAiB,mBAAoB,WAG7C,QAASC,KACRF,SAASG,qBAAqB,QAAQ,GAAGC,WAAa,KAIvD,QAASC,GAAcC,EAASC,EAAaC,GAC5C,GAAIC,GAAoBT,SAASU,eAAeH,GAC5CF,EAAgBL,SAASU,eAAeJ,GACxCK,EAAeN,EAAcO,aAAe,IAChDP,GAAcQ,UAAUC,IAAI,UAG5BL,EAAkBM,MAAMC,YAAYR,EAAmBG,GAmEvD,QAASM,KACRZ,EAAc,qBAAqB,UAAU,eAC7CA,EAAc,qBAAqB,UAAU,kBAM9C,QAASa,GAAeC,GACvB,GAAIC,GAAWpB,SAASqB,uBAAuBF,EAC/C,KAAIG,EAAE,EAAGA,EAAIF,EAASG,OAAQD,IAC7BF,EAASE,GAAGE,QAAU,SAASC,GAC9B,GAAIC,GAASC,KAAKC,aAAa,cAC/BC,GAAaH,EAAOD,IAKvB,QAASI,GAAaC,EAAUL,GAC/B,GAAIM,GAAgB/B,SAASU,eAAeoB,EACzCC,GAAclB,UAAUmB,SAAS,aACnCD,EAAclB,UAAUoB,OAAO,aAE/BF,EAAclB,UAAUC,IAAI,aAE7BW,EAAMS,iBA1ER,GAAIC,GAAanC,SAASqB,uBAAuB,OAC7Ce,EAAgBpC,SAASqB,uBAAuB,iBACjDc,GAAWZ,SAAWa,EAAcb,QACtCc,QAAQC,IAAI,oDAKb,IAAIC,GAAgB,SAASC,GAC5BC,eAAiBzC,SAASqB,uBAAuB,OAAOmB,GAAU3B,UAAUC,IAAI,UAChF4B,sBAAwB1C,SAASqB,uBAAuB,kBAAkBmB,GAAU3B,UAAUC,IAAI,UAClG6B,aAAaC,QAAQ,kBAAmBJ,GACxCH,QAAQC,IAAI,uBAAyBE,IAIlCK,EAAY,WACf,IAAIvB,EAAE,EAAGA,EAAIc,EAAcb,OAAQD,IAClCa,EAAWb,GAAGT,UAAUoB,OAAO,UAC/BG,EAAcd,GAAGT,UAAUoB,OAAO,WAKhCa,EAAsBH,aAAaI,QAAQ,kBAS/C,KAR2B,OAAxBD,GAAgCX,EAAWZ,QAAUuB,EACvDP,EAAcO,IAEdT,QAAQC,IAAI,6EACZC,EAAc,IAIXjB,EAAE,EAAGA,EAAIa,EAAWZ,OAAQD,KAC/B,SAAU0B,GACTb,EAAWb,GAAGE,QAAU,WAGvB,MAFAqB,KACAN,EAAcS,IACP,IAEN1B,EAMHpB,KAQAe,IACAgC,OAAOC,SAAWjC,EAsBlBC,EAAe","file":"script.js","sourcesContent":["// TODO: use data-target instead of elementIndex\n\n// is the DOM ready for manipulation?\ndocument.addEventListener('DOMContentLoaded', function() {\n\n\t// add JS to body-tag to allow CSS-Manipulation if JS is available\n\tfunction setJs() {\n\t\tdocument.getElementsByTagName(\"body\")[0].className += \"js\";\n\t}\n\n\t// make element sticky (via position in css)\n\tfunction stickyElement(stickyId,compensateId,compensateProperty) {\n\t\tvar compensateElement = document.getElementById(compensateId);\n\t\tvar stickyElement = document.getElementById(stickyId);\n\t\tvar stickyHeight = stickyElement.clientHeight + 'px';\n\t\tstickyElement.classList.add('sticky');\n\n\t\t//add Element-Height as defined property to desired element\n\t\tcompensateElement.style.setProperty(compensateProperty,stickyHeight);\n\t}\n\n\t// toggle Element\n\tfunction toggleElement(elementId,targetElementId) {\n\t\ttoggleElement = document.getElementById(elementId);\n\t\ttoggleElement.onclick = function() {\n\t\t\ttargetElement = document.getElementById(targetElementId);\n\t\t\tif(targetElement.classList.contains('js-hidden')) {\n\t\t\t\ttargetElement.classList.remove('js-hidden');\n\t\t\t} else {\n\t\t\t\ttargetElement.classList.add('js-hidden');\n\t\t\t}\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\t// initially set Element-count of tabs and tabbedContent and check consistency\n\tvar tabTrigger = document.getElementsByClassName(\"tab\");\n\tvar tabbedContent = document.getElementsByClassName(\"tabbed-content\");\n\tif(tabTrigger.length !== tabbedContent.length) {\n\t\tconsole.log(\"count of tabs and tabbed-contend isn't consistent\");\n\t}\n\n\t// Tab-Handling-Function\n\t// -- set Current-Tab and tabbed-content\n\tvar setCurrentTab = function(newTabId) {\n\t\tmarkTabTrigger = document.getElementsByClassName(\"tab\")[newTabId].classList.add(\"active\");\n\t\tunhideSelectedContent = document.getElementsByClassName(\"tabbed-content\")[newTabId].classList.add(\"active\");\n\t\tlocalStorage.setItem(\"tabbedContentId\", newTabId);\n\t\tconsole.log(\"localStorage ID is: \" + newTabId);\n\t}\n\n\t// -- unset Current-Tab and tabbed-conent\n\tvar unsetTabs = function() {\n\t\tfor(i=0; i < tabbedContent.length; i++) {\n\t\t\ttabTrigger[i].classList.remove(\"active\");\n\t\t\ttabbedContent[i].classList.remove(\"active\");\n\t\t}\n\t}\n\n\t// -- if DOM is ready, check if localStorage is filled and stored Id is still available\n\tvar savedLocalStorageId = localStorage.getItem(\"tabbedContentId\");\n\tif(savedLocalStorageId !== null && tabTrigger.length >= savedLocalStorageId) {\n\t\tsetCurrentTab(savedLocalStorageId);\n\t} else {\n\t\tconsole.log(\"localStorage is empty or stored Id is no longer present - setting default\");\n\t\tsetCurrentTab(0);\n\t}\n\n\t// -- switch tabs onClick\n\tfor(i=0; i < tabTrigger.length; i++) {\n\t\t(function(index){\n\t\t\ttabTrigger[i].onclick = function(){\n\t\t\t\tunsetTabs();\n\t\t\t\tsetCurrentTab(index);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t})(i);\n\t}\n\n\n\t// ---- initialize ----\n\t\t// set Js on body if JS is available\n\t\tsetJs();\n\n\t\t//sticky header (item(Id) to fix, item(Id) with property to compensate fix)\n\t\tfunction stickyElements() {\n\t\t\tstickyElement('application-header','content','padding-top');\n\t\t\tstickyElement('application-footer','content','padding-bottom');\n\t\t}\n\n\t\tstickyElements();\n\t\twindow.onresize = stickyElements;\n\n\t\tfunction handleTriggers(elementClassName) {\n\t\t\tvar elements = document.getElementsByClassName(elementClassName);\n\t\t\tfor(i=0; i < elements.length; i++) {\n\t\t\t\telements[i].onclick = function(event) {\n\t\t\t\t\tvar target = this.getAttribute('data-target');\n\t\t\t\t\ttoggleTarget(target,event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction toggleTarget(elementId,event) {\n\t\t\tvar targetElement = document.getElementById(elementId);\n\t\t\tif(targetElement.classList.contains('js-hidden')) {\n\t\t\t\ttargetElement.classList.remove('js-hidden');\n\t\t\t} else {\n\t\t\t\ttargetElement.classList.add('js-hidden');\n\t\t\t}\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\thandleTriggers('overlay-trigger');\n});\n"]}